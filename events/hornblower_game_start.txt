# # Enable Strategic Resources knowledge for Major Countries 
# event = {
# 	id = game_start.100
# 	hide_window = yes
# 	is_triggered_only = yes
 
# 	immediate = {
# 		every_country = {
# 			limit = { is_major = yes }
 
# 			give_technology = {
# 				tech = tech_mine_dilithium
# 				message = no
# 			}
# 			give_technology = {
# 				tech = tech_mine_tetryons
# 				message = no
# 			}
# 			give_technology = {
# 				tech = tech_mine_gravitons
# 				message = no
# 			}
# 		}
# 	}
# }

# Bespoke UFoP-Romulan Neutral Zone
event = {
	id = game_start.101
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:ufop_country = {
			create_neutral_zone = { 
				target = event_target:romulan_country
				empty = yes
			}

			last_created_neutral_zone = { 
				add_system_to_neutral_zone = event_target:eden_star.solar_system
				add_system_to_neutral_zone = event_target:iconia_star.solar_system
				add_system_to_neutral_zone = event_target:draken_star.solar_system
				add_system_to_neutral_zone = event_target:galador_star.solar_system
				add_system_to_neutral_zone = event_target:nelvana_star.solar_system
				# HRB-2033: Add more Systems here
			}
		}
	}
}

# Bespoke UFoP-Romulan Truce
event = {
	id = game_start.102
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# HRB_NOTE: this creates a truce both ways
		event_target:ufop_country = {
			set_truce = {
				target = event_target:romulan_country
				type = none
				start_date = 2345.06.03
			}
		}
	}
}

# Bespoke UFoP-Klingon Defensive Pact
event = {
	id = game_start.103
	hide_window = yes  
	is_triggered_only = yes

	immediate = {
		event_target:ufop_country = {
			set_defensive_pact = {
				target = event_target:klingon_country
			}
		}
	}
}

# Major Powers obtain Intel about Systems owned by Majors
event = {
	id = game_start.105
	hide_window = yes
	is_triggered_only = yes
 
	immediate = {
		every_country = {
			limit = { is_major = yes }
			save_event_target_as = from_country
			
			every_country = {
				limit = {
					is_major = yes
					NOT = { is_same_value = event_target:from_country }
				}

				every_system_within_border = {
					event_target:from_country = {
						set_visited = prev
					}
				}
			}
		}
	}
}

# HRB: Bajoran starting relationship with the Majors
event = {
	id = game_start.110
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		exists = event_target:bajoran_country
	}

	immediate = {
		every_country = {
			limit = { is_major = yes }

			establish_contact = { who = event_target:bajoran_country hidden = yes }
			establish_communications_no_message = event_target:bajoran_country
		}

		event_target:bajoran_country = {
			every_country = {
				limit = { is_major = yes }
	
				establish_contact = { who = prev hidden = yes }
				establish_communications_no_message = prev
			}
		}
	}	
}

# Bajoran subject of Cardassia
event = {
	id = game_start.106
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		exists = event_target:bajoran_country
		exists = event_target:cardassian_country
	}

	immediate = {
		event_target:bajoran_country = {
			set_subject_of = {
				who = event_target:cardassian_country
				subject_type = occupied_state
			}

			every_owned_leader = {
				limit = { leader_class = ruler }
				PREV = {
					create_leader = {
						class = ruler
						species = event_target:cardassian_country.owner_species
					}
					assign_leader = last_created_leader
				}
			}

			every_owned_planet = {
				every_owned_pop = {
					limit = {
						OR = {
							has_job_category = ruler
							has_job_category = specialist
						}
					}
					change_species = event_target:cardassian_country.owner_species
				}
			}
		}

		# HRB_DESIGN: TODO
		# HRB_NOTE: this can be an issue for the Tutorial
		# The modifier lasts 10 years, but we know that some players are taking
		# around that time to finish the Tutorial, so this will be expired
		event_target:cardassian_country = {
			add_modifier = {
				modifier = assimilation_unity_bonus
				days = 3600
			}
		}

		# HRB_DESIGN: TODO
		# HRB_NOTE: this does not work and didn't work before
		# At this stage of the game, the Minor Powers don't know each other or the Cardassians
		every_country = {
			limit = {
				NOT = { is_same_value = event_target:bajoran_country }
				
				is_minor = yes
				has_communications = event_target:bajoran_country
				
				opinion_level = {
					who = event_target:bajoran_country
					level >= good
				}
			}

			add_opinion_modifier = {
				who = event_target:cardassian_country
				modifier = opinion_occupation
			}
		}
	}
}

# HRB Non Tutorial Initializer
event = {
	id = game_start.150
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_tutorial_active = no
	}
 
	immediate = {
		enable_custom_ai_ministers = yes
		show_complete_ui_non_tutorial = yes
	}
}

# HRB Non Tutorial Initializer
event = {
	id = game_start.155
	hide_window = yes
	is_triggered_only = yes
 
	immediate = {
		every_country = {
			every_owned_leader = {
				add_traits_to_scientists = yes
			}
		}
	}
}

# Setup Correct Names for Pre-Warp Civs
event = {
	id = game_start.200
	hide_window = yes
	is_triggered_only = yes
 
	immediate = {
		every_system = {
			if = {
				limit = {
					has_star_flag = primitive_system
				}
				setup_pre_warp_civilization_system_names = yes
			}
		}
	}
}

# Betazoid starting relationship with the UFOP + treaties
event = {
	id = game_start.220
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		exists = event_target:betazoid_country
		exists = event_target:ufop_country
	}

	immediate = {
		event_target:ufop_country = {
			establish_contact = { who = event_target:betazoid_country hidden = yes }
			establish_communications_no_message = event_target:betazoid_country
			
			guarantee_country = event_target:betazoid_country
			set_closed_borders = {
				who = event_target:betazoid_country
				status = no
				forced = 5
			}
			add_trust = {
				amount = 50
				who = event_target:betazoid_country
			}
		}

		event_target:betazoid_country = {
			establish_contact = { who = event_target:ufop_country hidden = yes }
			establish_communications_no_message = event_target:ufop_country
			
			set_closed_borders = {
				who = event_target:ufop_country
				status = no
				forced = 5
			}
			add_trust = {
				amount = 50
				who = event_target:ufop_country
			}
			add_opinion_modifier = {
				who = event_target:ufop_country
				modifier = opinion_civic_diplomatic_expertise
			}

			# add_opinion_modifier = {
			# 	who = event_target:betazoid_country
			# 	modifier = opinion_major_supported_us_in_war
			# }	
		}
	}
}

# Romulan starting relationship with the UFOP + treaties
event = {
	id = game_start.240
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		exists = event_target:romulan_country
		exists = event_target:ufop_country
	}

	immediate = {
		event_target:romulan_country = {
			
			add_opinion_modifier = {
				who = event_target:ufop_country
				modifier = opinion_romulan_generation
			}
		}
	}
}

# Klingon starting relationship with the UFOP + treaties
event = {
	id = game_start.260
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		exists = event_target:klingon_country
		exists = event_target:ufop_country
	}

	immediate = {
		event_target:klingon_country = {
			
			set_closed_borders = {
				who = event_target:ufop_country
				status = no
			}

			add_opinion_modifier = {
				who = event_target:ufop_country
				modifier = opinion_klingon_generation
			}
		}
		event_target:ufop_country = {
			
			set_closed_borders = {
				who = event_target:klingon_country
				status = no
			}
		}
	}
}

# Cardassian starting relationship with the UFOP + treaties
event = {
	id = game_start.280
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		exists = event_target:cardassian_country
		exists = event_target:ufop_country
	}

	immediate = {
		event_target:cardassian_country = {
			
			add_opinion_modifier = {
				who = event_target:ufop_country
				modifier = opinion_insult
			}
		}
	}
}